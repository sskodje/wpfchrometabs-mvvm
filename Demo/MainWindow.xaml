<local:WindowBase 
        x:Class="Demo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="ChromeTabs Demo"
        Height="600"
        Width="700"
        xmlns:local="clr-namespace:Demo"
        xmlns:vm="clr-namespace:Demo.ViewModel"
        xmlns:usercontrols="clr-namespace:Demo.UserControls"
        xmlns:ct="clr-namespace:ChromeTabs;assembly=ChromeTabs"
        xmlns:ctConv="clr-namespace:ChromeTabs.Converters;assembly=ChromeTabs"
        xmlns:conv="clr-namespace:Demo.Converters"
        Background="WhiteSmoke"
        DataContext="{Binding Source={StaticResource Locator},Path=ViewModelMainWindow}">
    <!--These DataTemplates load the correct user control based on the viewmodel-->
    <Window.Resources>
        <DataTemplate DataType="{x:Type vm:TabClass1}">
            <usercontrols:UserControl1 />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:TabClass2}">
            <usercontrols:UserControl2 />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:TabClass3}">
            <usercontrols:UserControl3 />
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <!--The tab control with with tab tearing support.-->
        <ct:ChromeTabControl x:Name="MyChromeTabControl"
                             MaximumTabWidth="200"
                             TabPersistBehavior="Timed"
                             TabPersistDuration="0:0:0:5"
                             AddTabButtonBehavior="OpenNewTab"
                             Background="AliceBlue"
                             ItemsSource="{Binding ItemCollection}"
                             SelectedItem="{Binding SelectedTab}"
                             SelectedTabBrush="WhiteSmoke"
                             CanMoveTabs="{Binding CanMoveTabs}"
                             DragWindowWithOneTab="True"
                             IsAddButtonVisible="{Binding ShowAddButton}"
                             AddTabCommand="{Binding AddTabCommand}"
                             CloseTabCommand="{Binding CloseTabCommand}"
                             ReorderTabsCommand="{Binding ReorderTabsCommand}"
                             TabTearTriggerDistance="10"
                             TabDraggedOutsideBonds="TabControl_TabDraggedOutsideBonds">
            <!--We must override the item template to show our tab name in the header. Here we use a simple
            textblock, but you could put any combination of controls here. Uncomment the orange border to show
            the bounds of the header content presenter-->
            <ct:ChromeTabControl.ItemTemplate>
                <DataTemplate>
                    <Grid Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type ct:ChromeTabItem}}}">

                        <!--<Border BorderBrush="Orange"
                                BorderThickness="1">-->
                        <StackPanel Orientation="Horizontal"
                                    Background="Transparent">
                            <Image Source="{Binding TabIcon}"
                                   Stretch="Fill"
                                       Margin="5,5,5,5" />
                            <TextBlock Text="{Binding TabName}"
                                       TextWrapping="NoWrap"
                                       TextTrimming="CharacterEllipsis"
                                       VerticalAlignment="Center" />
                        </StackPanel>
                        <!--</Border>-->

                        <!--We can implement a context menu for the header here. The ChromeTabItems expose for convenience the following commands, "CloseTabCommand: close the current tab, "CloseAllTabsCommand", and "CloseOtherTabsCommand", which closes all tabs except the current.-->
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Close"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <MenuItem Header="Close all"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseAllTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <MenuItem Header="Close other tabs"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseOtherTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          CommandParameter="{Binding}" />

                            </ContextMenu>
                        </Grid.ContextMenu>
                    </Grid>
                </DataTemplate>
            </ct:ChromeTabControl.ItemTemplate>
        </ct:ChromeTabControl>
        <StackPanel Grid.Row="1"
                    Orientation="Horizontal"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right">
            <Button x:Name="button"
                    Content="Add Tab"
                    Margin="5"
                    Command="{Binding AddTabCommand}"
                    HorizontalAlignment="Left"
                    Width="75" />
            <CheckBox Content="Can add tabs"
                      Margin="5"
                      IsChecked="{Binding CanAddTabs,Mode=TwoWay}"
                      VerticalAlignment="Center" />
            <CheckBox Content="Show add button"
                      Margin="5"
                      IsChecked="{Binding ShowAddButton}"
                      VerticalAlignment="Center" />
            <CheckBox Content="Movable tabs"
                      Margin="5"
                      IsChecked="{Binding CanMoveTabs}"
                      VerticalAlignment="Center" />
        </StackPanel>
        <StackPanel Grid.Row="1"
                    Orientation="Horizontal"
                    HorizontalAlignment="Left">
            <Button x:Name="BnOpenPinnedTabExample"
                    Content="Pinned tab example"
                    HorizontalAlignment="Left"
                    Margin="5"
                    
                    Grid.Row="1"
                    Click="BnOpenPinnedTabExample_Click" />
            <Button x:Name="BnOpenCustomStyleExample"
                    Content="Custom style example"
                    HorizontalAlignment="Left"
                    Margin="5"
                   
                    Grid.Row="1"
                    Click="BnOpenCustomStyleExample_Click" />
        </StackPanel>

    </Grid>
</local:WindowBase>
